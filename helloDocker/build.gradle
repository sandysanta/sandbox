apply plugin: 'java'
apply plugin: 'com.bmuschko.docker-remote-api'

version = '0.0.1'

project.ext {
    // The gradle project name defaults to the name of the directory containing this file
    // (since docker requires lowercase names this is used to set a docker image name)
    name = "hello-docker"
}


// Import task types
import com.bmuschko.gradle.docker.tasks.image.*



repositories {
    mavenCentral()
    jcenter()
}

dependencies {
}


buildscript {
  repositories {
      gradlePluginPortal()
      jcenter()
  }
  dependencies {
    classpath 'com.bmuschko:gradle-docker-plugin:4.0.4'
  }
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

jar {
    baseName = "hello-docker"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest { attributes 'Main-Class': 'com.demo.HelloDocker' }
}
 
task copyJar(type: Copy) {
    dependsOn   'jar'
    from        "build/libs/hello-docker-${project.version}.jar"
    into        "docker-in/"
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}


docker {
    if (System.env.containsKey('DOCKER_HOST') && System.env.containsKey('DOCKER_CERT_PATH')) {
        url = System.env.DOCKER_HOST.replace("tcp", "https")
        certPath = new File(System.env.DOCKER_CERT_PATH)
    }
}

task dockerize(type: DockerBuildImage) {
    inputDir = file('docker-in')
    tags = [
            "demo/${project.ext.name}:${project.version}",
            "demo/${project.ext.name}:latest",
    ]
}


dockerize.dependsOn copyJar


